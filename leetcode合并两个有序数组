给你两个按 非递减顺序 排列的整数数组 nums1 和 nums2，另有两个整数 m 和 n ，分别表示 nums1 和 nums2 中的元素数目。

请你 合并 nums2 到 nums1 中，使合并后的数组同样按 非递减顺序 排列。

注意：最终，合并后数组不应由函数返回，而是存储在数组 nums1 中。为了应对这种情况，nums1 的初始长度为 m + n，其中前 m 个元素表示应合并的元素，后 n 个元素为 0 ，应忽略。nums2 的长度为 n 。

 

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/merge-sorted-array
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

c语言解法：void merge(int* nums1, int nums1Size, int m, int* nums2, int nums2Size, int n){
    for(int i=0;i<n;i++){
        nums1[m+i]=nums2[i];
    }
   for(int i=0;i<(m+n);i++){
       bool flag=false;
       for(int j=1;j<(m+n-i);j++){
           if(nums1[j]<nums1[j-1]){
               int m;
               m=nums1[j];
               nums1[j]=nums1[j-1];
               nums1[j-1]=m;
               flag=true;
           }
       }
       if(!flag) break;
   }
    return nums1;
}

解释:先通过一个for循环将nums2数组的元素复制到nums1的后方，再通过冒泡排序法进行排序，具体程序如上所示
